{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vmName": {
			"type": "string",
			"defaultValue": "VmName",
			"metadata": {
				"description": "The virtual machine name"
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_D2s_V3",
			"metadata": {
				"description": "The virtual machine size"
			}
		},
		"osPlatform": {
			"type": "string",
			"allowedValues": [
				"Windows",
				"Linux"
			],
			"defaultValue": "Windows",
			"metadata": {
				"description": "Select the OS type to deploy"
			}
		},
		"osPublisher": {
			"type": "string",
			"allowedValues": [
				"MicrosoftWindowsServer",
				"RedHat",
				"Canonical",
				"OpenLogic"
			],
			"defaultValue": "MicrosoftWindowsServer",
			"metadata": {
				"description": "Select the OS publisher"
			}
		},
		"osOffer": {
			"type": "string",
			"allowedValues": [
				"WindowsServer",
				"RHEL",
				"UbuntuServer",
				"CentOS"
			],
			"defaultValue": "WindowsServer",
			"metadata": {
				"description": "Select the OS offer"
			}
		},
		"osImageSku": {
			"type": "string",
			"allowedValues": [
				"2012-R2-Datacenter",
				"2016-Datacenter",
				"2019-Datacenter",
				"6.10",
				"7.7",
				"8"
			],
			"defaultValue": "2016-Datacenter",
			"metadata": {
				"description": "Select the OS image"
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "vmadmin",
			"metadata": {
				"description": "The admin username for the VM"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The admin password for the VM"
			}
		},
		"diagnosticsStorageAccountName": {
			"type": "string",
			"defaultValue": "thestoragediag",
			"metadata": {
				"description": "The diagnostics storage account for the VM"
			}
		},
		"virtualNetworkReference": {
			"type": "string",
			"defaultValue": "/subscriptions/12345678-aaaa-bbbb-cccc-1234567890ab/resourceGroups/rg-name/providers/Microsoft.Network/virtualNetworks/vnet-name",
			"metadata": {
				"description": "The virtual network reference ID for the NIC. Should already exist"
			}
		},
		"subnetName": {
			"type": "string",
			"defaultValue": "default",
			"metadata": {
				"description": "The subnet name for the NIC. Should already exist"
			}
		},
		"staticIP": {
			"type": "string",
			"defaultValue": "10.2.2.35",
			"metadata": {
				"description": "The static IP address for the NIC. Should be in the subnet range"
			}
		},
		"availabilitySetName": {
			"type": "string",
			"defaultValue": "None",
			"metadata": {
				"description": "(Optional) Attach the VM to an existing availability set. Enter 'None' to exclude"
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources"
			}
		}
	},
	"variables": {
		"subnetRef": "[concat(parameters('virtualNetworkReference'), '/subnets/', parameters('subnetName'))]",
		"isWindowsOS": "[equals(parameters('osOffer'), 'WindowsServer')]"
	},
	"resources": [
		{
			"apiVersion": "2018-02-01",
			"name": "pid-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"resources": [
					]
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2019-04-01",
			"name": "[parameters('diagnosticsStorageAccountName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "Storage",
			"properties": {
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"blob": {
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				}
			}
		},
		{
			"condition": "[not(equals(parameters('availabilitySetName'), 'None'))]",
			"apiVersion": "2019-03-01",
			"type": "Microsoft.Compute/availabilitySets",
			"location": "[parameters('location')]",
			"name": "[parameters('availabilitySetName')]",
			"properties": {
				"PlatformUpdateDomainCount": 2,
				"PlatformFaultDomainCount": 2
			},
			"sku": {
				"name": "Aligned"
			}
		},
		{
			"apiVersion": "2018-04-01",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(parameters('vmName'), '-nic')]",
			"location": "[parameters('location')]",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[concat(parameters('staticIP'))]",
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2019-03-01",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkinterfaces/', concat(parameters('vmName'), '-nic'))]",
				"[resourceId('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
			],
			"properties": {
				"licenseType": "[if(variables('isWindowsOS'), 'Windows_Server', json('null'))]",
				"availabilitySet": {
					"id": "[if(not(equals(parameters('availabilitySetName'), 'None')), resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName')), json('null'))]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[parameters('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('osPublisher')]",
						"offer": "[parameters('osOffer')]",
						"sku": "[parameters('osImageSku')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(parameters('vmName'), '_OsDisk')]",
						"createOption": "FromImage",
						"caching": "ReadWrite",
						"osType": "[parameters('osPlatform')]"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-nic'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
					}
				}
			}
		}
	]
}